apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

ext {
    android_minsdk_version = 14
    android_targetsdk_version = 26
    android_compilesdk_version = 26
    android_support_library_version = '26.1.0'
}

repositories {
    maven { url 'https://maven.google.com' }
}

android {
    compileSdkVersion android_compilesdk_version
    buildToolsVersion android_buildtools_version

    configurations.all {
        resolutionStrategy.force "com.google.code.findbugs:jsr305:1.3.9"
    }

    defaultConfig {
        applicationId "jp.s64.android.stickyrecycler.example"
        minSdkVersion android_minsdk_version
        targetSdkVersion android_targetsdk_version
        versionCode android_version_code
        versionName sticky_recycler_version_name

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    signingConfigs {

        /*
        debug {
            storeFile System.getenv('ANDROID_DEBUG_KEYSTORE_FILE') != null ? file(System.getenv('ANDROID_DEBUG_KEYSTORE_FILE')) : rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        */

        release {
            storeFile file(release_keystore_file)
            storePassword release_keystore_password
            keyAlias release_key_alias
            keyPassword release_key_password
        }

    }

    buildTypes {

        debug {
            minifyEnabled false
            debuggable true
            zipAlignEnabled true
            shrinkResources false
            //signingConfig signingConfigs.debug

            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }

        release {
            minifyEnabled true
            debuggable false
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    dataBinding {
        enabled = true
    }

}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile("com.android.support.test.espresso:espresso-core:${espresso_version}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support:appcompat-v7:${android_support_library_version}"
    compile "com.android.support:recyclerview-v7:${android_support_library_version}"
    testCompile "junit:junit:${junit_version}"

    /*
    compile("jp.s64.android.stickyrecycler:core:${sticky_recycler_version_name}") {
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    */
    compile project(':core')

    compile "android.arch.lifecycle:runtime:${android_lifecycle_components_runtime_version}"
    compile "android.arch.lifecycle:extensions:${android_lifecycle_components_extensions_version}"
    annotationProcessor "android.arch.lifecycle:compiler:${android_lifecycle_components_compiler_version}"
    kapt "android.arch.lifecycle:compiler:${android_lifecycle_components_compiler_version}"
    //compile "android.arch.lifecycle:common-java8:${android_lifecycle_components_common_java8_version}"
    compile "android.arch.lifecycle:reactivestreams:${android_lifecycle_components_reactivestreams_version}"
    //compile "android.arch.paging:runtime:${android_paging_version}"

    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    //compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:${kotlin_version}"
    kapt "com.android.databinding:compiler:${databinding_compiler_version}" // workaround

    compile "com.google.dagger:dagger:${dagger_version}"
    compile "com.google.dagger:dagger-android-support:${dagger_version}"
    annotationProcessor "com.google.dagger:dagger-compiler:${dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger_version}"

    compile "org.reactivestreams:reactive-streams:${reactive_streams_version}"
    compile "io.reactivex.rxjava2:rxjava:${rxjava2_version}"

    //compile "joda-time:joda-time:${joda_version}"
    compile "net.danlew:android.joda:${joda_android_version}"
}
